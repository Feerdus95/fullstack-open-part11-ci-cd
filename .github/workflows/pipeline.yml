name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Lint and test the Go application (Exercise 11.1)
  lint-and-test-go:
    name: Lint & Test Go
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run golangci-lint (Exercise 11.1)
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run Go tests
        run: go test -v ./...

  # Build and test the React application (Exercise 11.1)
  build-and-test-react:
    name: Build & Test React
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        working-directory: fullstack-open-part11-pokedex

      - name: Run linter
        run: npm run eslint
        working-directory: fullstack-open-part11-pokedex

      - name: Run unit tests
        run: npm test -- --coverage
        working-directory: fullstack-open-part11-pokedex

      - name: Build project (Exercise 11.2)
        run: npm run build
        working-directory: fullstack-open-part11-pokedex

      - name: Run e2e tests
        run: npx playwright install --with-deps && npm run test:e2e
        working-directory: fullstack-open-part11-pokedex

  # Build and test Docker image (Exercise 11.2)
  build-docker:
    name: Build & Test Docker
    needs: [lint-and-test-go, build-and-test-react]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t pokedex-app .

      - name: Test Docker image (Exercise 11.4 - Health check)
        run: |
          docker run -d --name pokedex -p 5000:5000 pokedex-app
          sleep 5
          curl --fail http://localhost:5000/health
          docker stop pokedex
          docker rm pokedex

  # Deploy (Exercise 11.3)
  deploy:
    name: Deploy
    needs: build-docker
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to production
        run: |
          echo "Deployment would happen here"
          echo "This is where you would deploy your application"