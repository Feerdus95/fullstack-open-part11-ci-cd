name: Notes App CI/CD

on:
  push:
    paths:
      - 'noteapp/**'
    branches: [ main ]
  pull_request:
    paths:
      - 'noteapp/**'
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: noteapp_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('noteapp/backend/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('noteapp/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Maven Wrapper for backend
      working-directory: ./noteapp/backend
      run: |
        mvn -N io.takari:maven:wrapper -Dmaven=3.8.6
        chmod +x mvnw

    - name: Build and test backend
      working-directory: ./noteapp/backend
      run: |
        ./mvnw clean test -Dspring.datasource.url=jdbc:postgresql://localhost:5432/noteapp_test -Dspring.datasource.username=testuser -Dspring.datasource.password=testpass

    - name: Build frontend
      working-directory: ./noteapp/frontend
      run: |
        npm ci
        npm run build

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./noteapp
          file: Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/notes-backend:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./noteapp
          file: Dockerfile.frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/notes-frontend:latest
